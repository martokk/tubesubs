"""
This type stub file was generated by pyright.
"""

from .compat import functools

UPDATE_SOURCES = ...
REPOSITORY = ...
_VERSION_RE = ...
API_BASE_URL = ...
API_URL = ...
def detect_variant(): # -> str:
    ...

@functools.cache
def current_git_head(): # -> LiteralString | bytes | None:
    ...

_FILE_SUFFIXES = ...
_NON_UPDATEABLE_REASONS = ...
def is_non_updateable(): # -> str | None:
    ...

class Updater:
    _exact = ...
    def __init__(self, ydl, target=...) -> None:
        ...

    @property
    def current_version(self): # -> str:
        """Current version"""
        ...

    @property
    def new_version(self): # -> Any:
        """Version of the latest release we can update to"""
        ...

    @property
    def latest_version(self): # -> str | Any:
        """Version of the target release"""
        ...

    @property
    def has_update(self): # -> bool:
        """Whether there is an update available"""
        ...

    @functools.cached_property
    def filename(self): # -> str:
        """Filename of the executable"""
        ...

    @functools.cached_property
    def release_name(self): # -> str:
        """The release filename"""
        ...

    @functools.cached_property
    def release_hash(self):
        """Hash of the latest release"""
        ...

    def check_update(self): # -> bool | None:
        """Report whether there is an update available"""
        ...

    def update(self): # -> Literal[True] | None:
        """Update yt-dlp executable to the latest version"""
        ...

    @functools.cached_property
    def cmd(self): # -> list[str] | None:
        """The command-line to run the executable, if known"""
        ...

    def restart(self): # -> int | Any:
        """Restart the executable"""
        ...



def run_update(ydl): # -> Literal[True] | None:
    """Update the program file with the latest version from the repository
    @returns    Whether there was a successful update (No update = False)
    """
    ...

def update_self(to_screen, verbose, opener): # -> Literal[True] | None:
    class FakeYDL:
        ...



__all__ = ['Updater']
